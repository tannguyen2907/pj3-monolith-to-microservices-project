tannguyen@Cai-mac-ngu-ngoc deployments % kubectl describe services
Name:              backend-feed
Namespace:         default
Labels:            service=backend-feed
Annotations:       <none>
Selector:          app=backend-feed
Type:              ClusterIP
IP:                10.100.230.228
Port:              8080  8080/TCP
TargetPort:        8080/TCP
Endpoints:         
Session Affinity:  None
Events:            <none>


Name:              backend-user
Namespace:         default
Labels:            service=backend-user
Annotations:       <none>
Selector:          app=backend-user
Type:              ClusterIP
IP:                10.100.145.61
Port:              8080  8080/TCP
TargetPort:        8080/TCP
Endpoints:         
Session Affinity:  None
Events:            <none>


Name:              frontend
Namespace:         default
Labels:            service=frontend
Annotations:       <none>
Selector:          app=frontend
Type:              ClusterIP
IP:                10.100.130.246
Port:              8100  8100/TCP
TargetPort:        8100/TCP
Endpoints:         172.31.24.252:8100,172.31.33.4:8100
Session Affinity:  None
Events:            <none>


Name:              kubernetes
Namespace:         default
Labels:            component=apiserver
                   provider=kubernetes
Annotations:       <none>
Selector:          <none>
Type:              ClusterIP
IP:                10.100.0.1
Port:              https  443/TCP
TargetPort:        443/TCP
Endpoints:         172.31.0.204:443,172.31.19.12:443
Session Affinity:  None
Events:            <none>


Name:                     publicfrontend
Namespace:                default
Labels:                   app=frontend
Annotations:              <none>
Selector:                 app=frontend
Type:                     LoadBalancer
IP:                       10.100.193.245
LoadBalancer Ingress:     a5ae1ed5ee396498b9560add9ea16493-377364063.us-east-1.elb.amazonaws.com
Port:                     <unset>  8100/TCP
TargetPort:               8100/TCP
NodePort:                 <unset>  31948/TCP
Endpoints:                172.31.24.252:8100,172.31.33.4:8100
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type    Reason                Age    From                Message
  ----    ------                ----   ----                -------
  Normal  EnsuringLoadBalancer  8m32s  service-controller  Ensuring load balancer
  Normal  EnsuredLoadBalancer   8m28s  service-controller  Ensured load balancer


Name:                     publicreverseproxy
Namespace:                default
Labels:                   app=reverseproxy
Annotations:              <none>
Selector:                 app=reverseproxy
Type:                     LoadBalancer
IP:                       10.100.96.176
LoadBalancer Ingress:     aaa75e1bf6744448a8f41484fb592a96-1163466642.us-east-1.elb.amazonaws.com
Port:                     <unset>  8080/TCP
TargetPort:               8080/TCP
NodePort:                 <unset>  31939/TCP
Endpoints:                172.31.30.45:8080,172.31.32.59:8080
Session Affinity:         None
External Traffic Policy:  Cluster
Events:
  Type    Reason                Age    From                Message
  ----    ------                ----   ----                -------
  Normal  EnsuringLoadBalancer  5m34s  service-controller  Ensuring load balancer
  Normal  EnsuredLoadBalancer   5m30s  service-controller  Ensured load balancer


Name:              reverseproxy
Namespace:         default
Labels:            service=reverseproxy
Annotations:       <none>
Selector:          app=reverseproxy
Type:              ClusterIP
IP:                10.100.138.251
Port:              reverseproxy  8080/TCP
TargetPort:        8080/TCP
Endpoints:         172.31.30.45:8080,172.31.32.59:8080
Session Affinity:  None
Events:            <none>
